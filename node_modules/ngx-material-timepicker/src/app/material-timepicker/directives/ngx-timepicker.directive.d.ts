import { ElementRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { NgxMaterialTimepickerComponent } from '../ngx-material-timepicker.component';
import { ControlValueAccessor } from '@angular/forms';
import { DateTime } from 'luxon';
import * as ɵngcc0 from '@angular/core';
export declare class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {
    private elementRef;
    private locale;
    set format(value: number);
    get format(): number;
    private _format;
    set min(value: string | DateTime);
    get min(): string | DateTime;
    private _min;
    set max(value: string | DateTime);
    get max(): string | DateTime;
    private _max;
    set timepicker(picker: NgxMaterialTimepickerComponent);
    private _timepicker;
    set value(value: string);
    get value(): string;
    private _value;
    disabled: boolean;
    disableClick: boolean;
    private timepickerSubscriptions;
    private previousFormat;
    onTouched: () => void;
    private onChange;
    constructor(elementRef: ElementRef, locale: string);
    get element(): any;
    private set defaultTime(value);
    updateValue(value: string): void;
    ngOnChanges(changes: SimpleChanges): void;
    onClick(event: any): void;
    writeValue(value: string): void;
    registerOnChange(fn: (value: any) => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    ngOnDestroy(): void;
    private registerTimepicker;
    private updateInputValue;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TimepickerDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<TimepickerDirective, "[ngxTimepicker]", never, {
    "format": "format";
    "value": "value";
    "min": "min";
    "max": "max";
    "timepicker": "ngxTimepicker";
    "disabled": "disabled";
    "disableClick": "disableClick";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRpbWVwaWNrZXIuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbIm5neC10aW1lcGlja2VyLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5neE1hdGVyaWFsVGltZXBpY2tlckNvbXBvbmVudCB9IGZyb20gJy4uL25neC1tYXRlcmlhbC10aW1lcGlja2VyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERhdGVUaW1lIH0gZnJvbSAnbHV4b24nO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVGltZXBpY2tlckRpcmVjdGl2ZSBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBPbkRlc3Ryb3ksIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgbG9jYWxlO1xuICAgIHNldCBmb3JtYXQodmFsdWU6IG51bWJlcik7XG4gICAgZ2V0IGZvcm1hdCgpOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfZm9ybWF0O1xuICAgIHNldCBtaW4odmFsdWU6IHN0cmluZyB8IERhdGVUaW1lKTtcbiAgICBnZXQgbWluKCk6IHN0cmluZyB8IERhdGVUaW1lO1xuICAgIHByaXZhdGUgX21pbjtcbiAgICBzZXQgbWF4KHZhbHVlOiBzdHJpbmcgfCBEYXRlVGltZSk7XG4gICAgZ2V0IG1heCgpOiBzdHJpbmcgfCBEYXRlVGltZTtcbiAgICBwcml2YXRlIF9tYXg7XG4gICAgc2V0IHRpbWVwaWNrZXIocGlja2VyOiBOZ3hNYXRlcmlhbFRpbWVwaWNrZXJDb21wb25lbnQpO1xuICAgIHByaXZhdGUgX3RpbWVwaWNrZXI7XG4gICAgc2V0IHZhbHVlKHZhbHVlOiBzdHJpbmcpO1xuICAgIGdldCB2YWx1ZSgpOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfdmFsdWU7XG4gICAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgZGlzYWJsZUNsaWNrOiBib29sZWFuO1xuICAgIHByaXZhdGUgdGltZXBpY2tlclN1YnNjcmlwdGlvbnM7XG4gICAgcHJpdmF0ZSBwcmV2aW91c0Zvcm1hdDtcbiAgICBvblRvdWNoZWQ6ICgpID0+IHZvaWQ7XG4gICAgcHJpdmF0ZSBvbkNoYW5nZTtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBsb2NhbGU6IHN0cmluZyk7XG4gICAgZ2V0IGVsZW1lbnQoKTogYW55O1xuICAgIHByaXZhdGUgc2V0IGRlZmF1bHRUaW1lKHZhbHVlKTtcbiAgICB1cGRhdGVWYWx1ZSh2YWx1ZTogc3RyaW5nKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBvbkNsaWNrKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogKHZhbHVlOiBhbnkpID0+IHZvaWQpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB2b2lkKTogdm9pZDtcbiAgICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZWdpc3RlclRpbWVwaWNrZXI7XG4gICAgcHJpdmF0ZSB1cGRhdGVJbnB1dFZhbHVlO1xufVxuIl19